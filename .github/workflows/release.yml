name: Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  lint:
    name: Lint
    uses: ./.github/workflows/lint.yml

  test:
    name: Test
    uses: ./.github/workflows/test.yml

  release:
    name: Release
    needs: [lint, test]
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      prs: ${{ steps.release.outputs.prs }}
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: go

  publish:
    name: Publish artifacts
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: git fetch --force --tags

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_PRIVATE_KEY: ${{ secrets.HOMEBREW_TAP_PRIVATE_KEY }}
          WINGET_PKGS_PRIVATE_KEY: ${{ secrets.WINGET_PKGS_PRIVATE_KEY }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      # Pending for https://github.com/google-github-actions/release-please-action/issues/776
      # - uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const prs = JSON.parse(${{ needs.release.outputs.prs }})
      #       for (const pr of prs) {
      #         github.rest.issues.addLabels({
      #           issue_number: pr.number,
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           labels: ["autorelease: published"]
      #         })
      #       }

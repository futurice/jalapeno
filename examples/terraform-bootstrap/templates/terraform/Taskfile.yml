{{- $environments := splitList "," .Variables.ENVIRONMENTS -}}
version: "3"

tasks:
  init:
    cmds:
      {{- range $index, $env := $environments }}
      - task: tf:init-environment
        vars:
          environment: {{ $env | quote }}
          storage_account_name: {{ (printf "tfs%.11s" (regexReplaceAll "[^a-z0-9]" (.Variables.SERVICE_NAME | lower) "")) }}{{ stableRandomAlphanumeric 6 .Recipe.Anchor }}{{ $env }}
      {{- end }}
  tf:init-environment:
    deps: [az:login]
    cmds:
      - rm -Rf .terraform/terraform.tfstate backend.tf # Remove backend from previous run
      - terraform init
      - terraform workspace new {{ `{{.environment}}` }}
      - >-
        terraform apply
        -target azurerm_storage_container.tfstate
        -target azurerm_role_assignment.tfstate
        -auto-approve
        -input=false
      # Save output values to variables before migrating the backend
      - >-
        RESOURCE_GROUP_NAME=$(terraform output -raw resource_group_name);
        STORAGE_ACCOUNT_NAME=$(terraform output -raw tfstate_storage_account_name);
        STORAGE_CONTAINER_NAME=$(terraform output -raw tfstate_storage_container_name);

        terraform apply
        -target local_file.backend_config
        -auto-approve
        -input=false;

        terraform init
        -migrate-state
        -force-copy
        -input=false
        -backend-config="resource_group_name=$RESOURCE_GROUP_NAME"
        -backend-config="storage_account_name=$STORAGE_ACCOUNT_NAME"
        -backend-config="container_name=$STORAGE_CONTAINER_NAME"
        -backend-config="key=tfstate_";
      - rm -Rf terraform.tfstate.d # Remove local state files
  tf:select-environment:
    cmds:
      - task: tf:init-environment
        vars:
          environment: {{ `{{.CLI_ARGS}}` }}
  az:login:
    cmds:
      - az login
    status:
      - az account show
# TODO: task to delete state resources for a particular env
# TODO: validate resource group name when prompting
# TODO: Setup CI pipeline
#   - inject SP credentials to GH actions secrets
#   - add GH action that installs terraform and task
#   - template out tasks in this taskfile that
#     1. do terraform init with proper backend config for the env
#   - add GH action that runs those tasks

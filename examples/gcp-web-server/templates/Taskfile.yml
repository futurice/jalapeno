version: "3"

vars:
  SERVICE_NAME: {{ .Variables.SERVICE_NAME }}

  GCP_PROJECT_NAME: {{ .Variables.GCP_PROJECT_NAME }}
  GCP_PROJECT_ID: {{ default (printf "%s-%s" (.Variables.GCP_PROJECT_NAME | lower | replace " " "-") (randNumeric 6)) .Variables.GCP_PROJECT_ID }}
  GCP_FOLDER_ID: {{ .Variables.GCP_FOLDER_ID }}
  GCP_BILLING_ACCOUNT_ID: {{ .Variables.GCP_BILLING_ACCOUNT_ID }}
  GCP_LOCATION: {{ .Variables.GCP_LOCATION }}

  REPOSITORY_NAME: {{ `{{.SERVICE_NAME}}` }}
  DOCKER_IMAGE_NAME: {{ `{{.SERVICE_NAME}}` }}
  DOCKER_IMAGE_URL: "{{ `{{.GCP_LOCATION}}` }}-docker.pkg.dev/{{ `{{.GCP_PROJECT_ID}}` }}/{{ `{{.REPOSITORY_NAME}}` }}/{{ `{{.DOCKER_IMAGE_NAME}}` }}"

tasks:
  tools:gcloud:
    cmds:
      - echo "Install gcloud by going to https://cloud.google.com/sdk/docs/install"
      - read -p "Press enter to after you've installed the tool"
    status:
      - gcloud version

  tools:docker:
    cmds:
      - echo "Install Docker by going to https://docs.docker.com/desktop/mac/install/"
      - read -p "Press enter to after you've installed the tool"
    status:
      - docker help

  login:
    desc: Login to GCP
    deps: [tools:gcloud]
    cmds:
      - gcloud auth login
    status:
      - gcloud auth print-access-token

  init:
    desc: Creates the environment on GCP. Needs to be done only once on project's lifecycle
    deps: [login]
    cmds:
      - gcloud projects create {{ `{{.GCP_PROJECT_ID}}` }} --name {{ `{{.GCP_PROJECT_NAME}}` }} --folder {{ `{{.GCP_FOLDER_ID}}` }} --billing-account {{ `{{.GCP_BILLING_ACCOUNT_ID}}` }} --set-as-default
      - gcloud services enable artifactregistry.googleapis.com run.googleapis.com --project={{ `{{.GCP_PROJECT_ID}}` }}
      - gcloud artifacts repositories create {{ `{{.REPOSITORY_NAME}}` }} --location={{ `{{.GCP_LOCATION}}` }} --project={{ `{{.GCP_PROJECT_ID}}` }}
      - gcloud auth configure-docker {{ `{{.GCP_LOCATION}}` }}-docker.pkg.dev

  build:
    deps: [tools:docker]
    cmds:
      - docker build -t {{ `{{.DOCKER_IMAGE_NAME}}` }}:latest .
    sources:
      - src/*

  dev:
    deps: [tools:docker]
    vars:
      PORT: 8080
    cmds:
      - task: build
      - open http://localhost:{{ `{{.PORT}}` }}
      - docker run -it --rm -p {{ `{{.PORT}}` }}:80 {{ `{{.DOCKER_IMAGE_NAME}}` }}:latest

  push:
    deps: [tools:docker, login]
    cmds:
      - docker tag {{ `{{.DOCKER_IMAGE_NAME}}` }} {{ `{{.DOCKER_IMAGE_URL}}` }}
      - docker push {{ `{{.DOCKER_IMAGE_URL}}` }}

  deploy:
    desc: Build and deploy the application to GCP
    cmds:
      - task: build
      - task: push
      - gcloud run deploy {{ `{{.SERVICE_NAME}}` }} --port=80 --project={{ `{{.GCP_PROJECT_ID}}` }} --image={{ `{{.DOCKER_IMAGE_URL}}` }} --region={{ `{{.GCP_LOCATION}}` }}

  logs:
    cmds:
      - gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name={{ `{{.SERVICE_NAME}}` }}" --project {{ `{{.GCP_PROJECT_ID}}` }}
